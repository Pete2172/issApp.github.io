{"version":3,"sources":["utils.js","DataDisplay.js","BingMap.js","App.js","index.js"],"names":["formatInput","input","name","formate","num","date","Date","toLocaleDateString","toLocaleTimeString","Number","toFixed","DataDisplay","props","className","id","type","value","data","BingMap","location","lat","long","bingmapKey","bingkey","center","position","mapTypeId","width","App","state","url","light","dark","key","image1_loaded","image2_loaded","iss","latitude","longitude","altitude","velocity","visibility","timestamp","solar_lat","solar_lon","lightmap","Image","crossOrigin","src","onload","darkmap","downloadJsonFile","bind","parseData","timerDownload","drawDayLightMap","timerDraw","lon","fetch","this","then","response","json","jsonData","catch","error","window","alert","jsonFile","solar_longitude","setState","data_loaded","sun_lat","sun_lon","canv","refs","canvas","ctx","getContext","drawImage","height","imgData","getImageData","image_data","canvas_def","data2","i","j","x","y","index","lat1","lon1","Math","PI","acos","sin","cos","isInCircle","index2","radius","putImageData","labels","map","imag","ref","style","clear","marginLeft","float","left","border","setInterval","Component","ReactDOM","render","document","getElementById"],"mappings":"yTACO,SAASA,EAAYC,EAAOC,GAC/B,IAAIC,EACAC,EACA,OAAOF,GACH,IAAK,cACD,IAAIG,EAAO,IAAIC,KAAW,IAANL,GACpBE,EAAUE,EAAKE,qBAAuB,KAC5BF,EAAKG,qBACf,MACJ,IAAK,YAEDL,GADAC,EAAMK,OAAOR,GAAOS,QAAQ,IACX,GAAW,EAANN,EAAW,SAAWA,EAAM,SAClD,MACJ,IAAK,WAEDD,GADAC,EAAMK,OAAOR,GAAOS,QAAQ,IACX,GAAW,EAANN,EAAW,SAAWA,EAAM,SAClD,MACJ,IAAK,WAEDD,GADAC,EAAMK,OAAOR,GAAOS,QAAQ,IACZ,MAChB,MACJ,IAAK,WAEDP,GADAC,EAAMK,OAAOR,GAAOS,QAAQ,IACZ,QAG5B,OAAOP,ECEIQ,MAtBf,SAAqBC,GACjB,OACI,yBAAKC,UAAU,QACX,2BAAG,4BAAQC,GAAG,eAAX,KACIF,EAAMV,OAIb,2BACAY,GAAG,QACHC,KAAK,OACLC,MAAOhB,EAAYY,EAAMK,KAAML,EAAMV,U,OCQlCgB,EArBC,SAAAN,GACZ,IAAIO,EAAW,CAAEP,EAAMQ,IAAMR,EAAMS,MACnC,OACA,kBAAC,gBAAD,CACIC,WAAcV,EAAMW,QACpBC,OAAUL,EACVM,SAAU,WACVC,UAAY,SACZC,MAAQ,WC+KDC,E,YAjLX,aAAc,IAAD,8BACX,+CACKC,MAAQ,CACXC,IAAK,iDACLC,MAAO,mJACPC,KAAM,iHACNC,IAAK,+GACLC,eAAe,EACfC,eAAe,EACfC,IAAK,CACHC,SAAU,EACVC,UAAW,EACXC,SAAU,EACVC,SAAU,EACVC,WAAY,GACZC,UAAW,EACXC,UAAW,EACXC,UAAW,IAGf,EAAKC,SAAW,IAAIC,MACpB,EAAKD,SAASE,YAAc,YAC5B,EAAKF,SAASG,IAAM,EAAKnB,MAAME,MAC/B,EAAKc,SAASI,OAAS,WACrB,EAAKpB,MAAMK,eAAgB,GAG7B,EAAKgB,QAAU,IAAIJ,MACnB,EAAKI,QAAQH,YAAc,YAC3B,EAAKG,QAAQF,IAAM,EAAKnB,MAAMG,KAC9B,EAAKkB,QAAQD,OAAS,WACpB,EAAKpB,MAAMM,eAAgB,GAI7B,EAAKgB,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBACvB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBAEjB,EAAKhC,IAAM,EACX,EAAKqC,IAAM,EA1CA,E,gFA6CM,IAAD,OAChB,OAAOC,MAAMC,KAAK9B,MAAMC,KACtB8B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAAG,GACN,EAAKV,UAAUU,MAEhBC,OAAM,SAAAC,GACLC,OAAOC,MAAM,6D,gCAIPC,GAER,IAAIC,EAAmBD,EAASxB,UAAY,IAAOwB,EAASxB,UAAY,IAAMwB,EAASxB,UAEvFe,KAAKW,SAAS,CACZlC,IAAK,CACHC,SAAU+B,EAAS/B,SACnBC,UAAW8B,EAAS9B,UACpBC,SAAU6B,EAAS7B,SACnBC,SAAU4B,EAAS5B,SACnBC,WAAY2B,EAAS3B,WACrBC,UAAW0B,EAAS1B,UACpBC,UAAWyB,EAASzB,UACpBC,UAAWyB,GAEbE,aAAa,IAEfZ,KAAKvC,IAAMuC,KAAK9B,MAAMO,IAAIC,SAC1BsB,KAAKF,IAAME,KAAK9B,MAAMO,IAAIE,UAC1BqB,KAAKa,QAAUb,KAAK9B,MAAMO,IAAIO,UAC9BgB,KAAKc,QAAUd,KAAK9B,MAAMO,IAAIQ,Y,wCAK9B,IAAgC,IAA7Be,KAAK9B,MAAMM,gBAAuD,IAA7BwB,KAAK9B,MAAMK,cAAuB,CAGxE,IAAMwC,EAAOf,KAAKgB,KAAKC,OACjBC,EAAMH,EAAKI,WAAW,MAC5BD,EAAIE,UAAUpB,KAAKT,QAAS,EAAG,EAAGwB,EAAK/C,MAAO+C,EAAKM,QAEnD,IAAIC,EAAUJ,EAAIK,aAAa,EAAG,EAAGR,EAAK/C,MAAO+C,EAAKM,QAClDG,EAAaF,EAAQhE,KAEZ0C,KAAKgB,KAAKS,WAAWN,WAAW,MACxCC,UAAUpB,KAAKd,SAAU,EAAG,EAAG6B,EAAK/C,MAAO+C,EAAKM,QAGrD,IAFA,IAAMK,EAAQ1B,KAAKgB,KAAKS,WAAWN,WAAW,MAAMI,aAAa,EAAG,EAAGR,EAAK/C,MAAO+C,EAAKM,QAAQ/D,KAExFqE,EAAI,EAAGA,EAAIZ,EAAKM,OAAQM,IAC9B,IAAI,IAAIC,EAAI,EAAGA,EAAIb,EAAK/C,MAAO4D,IAAI,CACjC,IAAIC,EAAKD,EAAE,GAAK,IAAOA,EAAE,EAAI,MAAQ,IAAMA,EAAE,GACzCE,EAAKH,EAAE,GAAK,GAAM,GAAKA,EAAE,IAAMA,EAAE,EAAI,IAErCI,EAA2B,GAAlBJ,EAAEZ,EAAK/C,MAAQ4D,IHjFKI,EGmFWF,EHnFLG,EGmFQJ,EHnFFpE,EGmFKuC,KAAKa,QHnFLf,EGmFcE,KAAKc,QHlF7EkB,GAAQE,KAAKC,GAAG,IAChBF,GAAQC,KAAKC,GAAG,IAChB1E,GAAOyE,KAAKC,GAAG,IACfrC,GAAOoC,KAAKC,GAAG,IAERD,KAAKE,KAAMF,KAAKG,IAAIL,GAAME,KAAKG,IAAI5E,GAAOyE,KAAKI,IAAIN,GAAME,KAAKI,IAAI7E,GAAKyE,KAAKI,IAAIL,EAAKnC,KAAW,IAAIoC,KAAKC,MG+EzF,KACbX,EAAWO,GAASL,EAAMK,GAC1BP,IAAaO,GAASL,EAAMK,GAC5BP,IAAaO,GAASL,EAAMK,IAI9B,IACIQ,EAAc,SAACV,EAAE7B,KAAKF,IAAM,GAAd,SAAmBgC,EAAE9B,KAAKvC,IAAM,GAC9C+E,EAA4B,GAAlBb,EAAEZ,EAAK/C,MAAQ4D,GACzBW,GAAU,SAAKE,EAAW,IAAOF,GAAU,SAHlC,EAGgD,KAC3Df,EAAWgB,GAAU,EACrBhB,IAAagB,GAAU,GACvBhB,IAAagB,GAAU,KAI7BtB,EAAIwB,aAAapB,EAAS,EAAG,GHtG9B,IAAsCU,EAAMC,EAAMxE,EAAKqC,I,sCG4GxDE,KAAKR,mBACLQ,KAAKJ,oB,kCAILI,KAAKJ,oB,+BAKL,IAAM+C,EAAS,yBAAKzF,UAAU,UACX,kBAAC,EAAD,CAAaI,KAAM0C,KAAK9B,MAAMO,IAAIE,UAAWpC,KAAK,cAClD,kBAAC,EAAD,CAAae,KAAM0C,KAAK9B,MAAMO,IAAIC,SAAUnC,KAAK,aACjD,kBAAC,EAAD,CAAae,KAAM0C,KAAK9B,MAAMO,IAAIG,SAAUrC,KAAK,aACjD,kBAAC,EAAD,CAAae,KAAM0C,KAAK9B,MAAMO,IAAII,SAAUtC,KAAK,aACjD,kBAAC,EAAD,CAAae,KAAM0C,KAAK9B,MAAMO,IAAIM,UAAWxC,KAAK,iBAG/DqG,EAAM,kBAAC,EAAD,CACInF,IAAKuC,KAAKvC,IACVC,KAAMsC,KAAKF,IACXlC,QAASoC,KAAK9B,MAAMI,MAG9BuE,EAAQ,yBAAK3F,UAAU,QACf,4BACI4F,IAAI,SACJ9E,MAAO,IACPqD,OAAQ,KAEZ,4BAAQyB,IAAI,aAAc9E,MAAO,IAAKqD,OAAQ,IAAKnE,UAAU,aAI3E,OACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UAAf,iBACGyF,EACAE,EACD,yBAAKE,MAAO,CAACC,MAAM,OAAQ3B,OAAQ,OAAQrD,MAAO,QAASiF,WAAY,KAAMC,MAAO,OAAQC,KAAM,OAASC,OAAQ,qBAAuBR,M,0CAKhJS,YAAYrD,KAAKL,cAAe,S,GA7KpB2D,aCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.28e1bb2d.chunk.js","sourcesContent":["\r\nexport function formatInput(input, name){\r\n    let formate;\r\n    let num;\r\n        switch(name){\r\n            case \"Date & Time\":\r\n                let date = new Date(input*1000);\r\n                formate = date.toLocaleDateString() + \", \" \r\n                        + date.toLocaleTimeString();\r\n                break;\r\n            case \"Longitude\":\r\n                num = Number(input).toFixed(2);\r\n                formate = (num < 0) ? num*(-1) + \"\\xB0 W\" : num + \"\\xB0 E\";\r\n                break;\r\n            case \"Latitude\":\r\n                num = Number(input).toFixed(2);\r\n                formate = (num < 0) ? num*(-1) + \"\\xB0 S\" : num + \"\\xB0 N\";\r\n                break;\r\n            case \"Altitude\":\r\n                num = Number(input).toFixed(2);\r\n                formate = num + \" km\";\r\n                break;\r\n            case \"Velocity\":\r\n                num = Number(input).toFixed(2);\r\n                formate = num + \" km/h\";\r\n                break;\r\n        }\r\n    return formate;\r\n} \r\n\r\nexport function calculateGreatCircleDistance(lat1, lon1, lat, lon){\r\n    lat1 *= Math.PI/180;\r\n    lon1 *= Math.PI/180;\r\n    lat *= Math.PI/180;\r\n    lon *= Math.PI/180;\r\n\r\n    return Math.acos((Math.sin(lat1)*Math.sin(lat) +(Math.cos(lat1)*Math.cos(lat)*Math.cos(lon1-lon)))) * (180/Math.PI);\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./DataDisplay.css\";\r\n\r\nimport { formatInput } from \"./utils.js\";\r\n\r\n\r\nfunction DataDisplay(props) {\r\n    return(\r\n        <div className=\"data\">\r\n            <p><strong id=\"data__label\">\r\n                > {props.name}\r\n            </strong>\r\n            </p>\r\n            \r\n            <input \r\n            id=\"input\" \r\n            type=\"text\"\r\n            value={formatInput(props.data, props.name)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nDataDisplay.propTypes = {\r\n    data: PropTypes.number,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default DataDisplay;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { ReactBingmaps } from 'react-bingmaps';\r\n\r\n\r\nconst BingMap = props => {\r\n    let location = [ props.lat , props.long];\r\n    return(\r\n    <ReactBingmaps\r\n        bingmapKey = {props.bingkey}\r\n        center = {location}\r\n        position =\"relative\"\r\n        mapTypeId = \"aerial\"\r\n        width = \"100px\"\r\n        \r\n        > \r\n        </ReactBingmaps>\r\n    );\r\n}\r\n\r\nBingMap.propTypes = {\r\n  long: PropTypes.number,\r\n  lat: PropTypes.number,\r\n  key: PropTypes.string\r\n} \r\n\r\nexport default BingMap;","import React, {Component} from 'react';\r\nimport './App.css';\r\n\r\nimport DataDisplay from \"./DataDisplay.js\";\r\nimport BingMap from \"./BingMap.js\";\r\nimport { calculateGreatCircleDistance } from \"./utils.js\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  \r\n    constructor(){\r\n      super();\r\n      this.state = {\r\n        url: \"https://api.wheretheiss.at/v1/satellites/25544\",\r\n        light: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Whole_world_-_land_and_oceans_12000.jpg/1024px-Whole_world_-_land_and_oceans_12000.jpg\",\r\n        dark: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/BlackMarble20161km.jpg/1024px-BlackMarble20161km.jpg\",\r\n        key: \"kdZJmZ4vgujbABzslMTx~LJdezJEfoUd_AGfouXIjRg~AgDg1zk0AZwHJIi709KW2T97_JL8p5AJS8szvnwdLyFQRNMyc0bfsVGJUBnxIve9\",\r\n        image1_loaded: false,\r\n        image2_loaded: false,\r\n        iss: {\r\n          latitude: 0,\r\n          longitude: 0,\r\n          altitude: 0,\r\n          velocity: 0,\r\n          visibility: \"\",\r\n          timestamp: 0,\r\n          solar_lat: 0,\r\n          solar_lon: 0,\r\n        }\r\n      };\r\n      this.lightmap = new Image();\r\n      this.lightmap.crossOrigin = \"anonymous\";\r\n      this.lightmap.src = this.state.light;\r\n      this.lightmap.onload = () => {\r\n        this.state.image1_loaded = true;\r\n      }\r\n\r\n      this.darkmap = new Image();\r\n      this.darkmap.crossOrigin = \"anonymous\";\r\n      this.darkmap.src = this.state.dark;\r\n      this.darkmap.onload = () => {\r\n        this.state.image2_loaded = true;\r\n      }\r\n\r\n\r\n      this.downloadJsonFile = this.downloadJsonFile.bind(this);\r\n      this.parseData = this.parseData.bind(this);\r\n      this.timerDownload = this.timerDownload.bind(this);\r\n      this.drawDayLightMap = this.drawDayLightMap.bind(this);\r\n      this.timerDraw = this.timerDraw.bind(this);\r\n\r\n      this.lat = 0;\r\n      this.lon = 0;\r\n    }\r\n\r\n    downloadJsonFile(){\r\n      return fetch(this.state.url)\r\n       .then(response => response.json())\r\n        .then(jsonData =>{\r\n        this.parseData(jsonData);\r\n      })\r\n      .catch(error => {\r\n        window.alert(\"Something went wrong with downloading data from url!\");\r\n      });\r\n    }\r\n\r\n    parseData(jsonFile){\r\n\r\n      var solar_longitude = (jsonFile.solar_lon > 180) ? jsonFile.solar_lon - 360 : jsonFile.solar_lon; // fixing bug in ISS API\r\n\r\n      this.setState({\r\n        iss: {\r\n          latitude: jsonFile.latitude,\r\n          longitude: jsonFile.longitude,\r\n          altitude: jsonFile.altitude,\r\n          velocity: jsonFile.velocity,\r\n          visibility: jsonFile.visibility,\r\n          timestamp: jsonFile.timestamp,\r\n          solar_lat: jsonFile.solar_lat,\r\n          solar_lon: solar_longitude\r\n        },\r\n        data_loaded: true\r\n      })\r\n      this.lat = this.state.iss.latitude;\r\n      this.lon = this.state.iss.longitude;\r\n      this.sun_lat = this.state.iss.solar_lat;\r\n      this.sun_lon = this.state.iss.solar_lon;\r\n    }\r\n\r\n    drawDayLightMap(){\r\n\r\n      if(this.state.image2_loaded === true && this.state.image1_loaded === true){\r\n        \r\n      \r\n        const canv = this.refs.canvas;\r\n        const ctx = canv.getContext('2d');\r\n        ctx.drawImage(this.darkmap, 0, 0, canv.width, canv.height);\r\n        \r\n        let imgData = ctx.getImageData(0, 0, canv.width, canv.height);\r\n        let image_data = imgData.data;\r\n\r\n        const ctx2 = this.refs.canvas_def.getContext('2d');\r\n        ctx2.drawImage(this.lightmap, 0, 0, canv.width, canv.height);\r\n        const data2 = this.refs.canvas_def.getContext('2d').getImageData(0, 0, canv.width, canv.height).data;\r\n\r\n        for(var i = 0; i < canv.height; i++){\r\n          for(var j = 0; j < canv.width; j++){\r\n            let x = (j/2 >= 180) ? j/2 - 180 : -(180 - j/2);  // trasforming pixels coordinates to geographic coordinates\r\n            let y = (i/2 <= 90) ? 90 - i/2 : -(i/2 - 90);\r\n             \r\n            let index = (i*canv.width + j)*4;       // choosing proper index to manipualte object\r\n\r\n            let distance = calculateGreatCircleDistance(y, x, this.sun_lat, this.sun_lon);\r\n            /** Drawing Day/Night World Map */\r\n            if(distance <= 90){\r\n              image_data[index] = data2[index];\r\n              image_data[++index] = data2[index];\r\n              image_data[++index] = data2[index];\r\n            } \r\n\r\n            /** Drawing ISS location pointer */\r\n            let radius = 5;\r\n            let isInCircle = ((x-this.lon)**2 + (y-this.lat)**2);\r\n            let index2 = (i*canv.width + j)*4; \r\n            if((isInCircle >= (radius-3)**2) && (isInCircle <= (radius)**2)){\r\n              image_data[index2] = 7;\r\n              image_data[++index2] = 79;\r\n              image_data[++index2] = 100;\r\n            }\r\n          }\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n        \r\n      }\r\n    }\r\n\r\n    timerDownload(){\r\n      this.downloadJsonFile();\r\n      this.drawDayLightMap();\r\n    }\r\n\r\n    timerDraw(){\r\n      this.drawDayLightMap();\r\n    }\r\n\r\n    render(){\r\n\r\n      const labels = <div className=\"labels\">\r\n                         <DataDisplay data={this.state.iss.longitude} name=\"Longitude\" />\r\n                         <DataDisplay data={this.state.iss.latitude} name=\"Latitude\" />\r\n                         <DataDisplay data={this.state.iss.altitude} name=\"Altitude\" />\r\n                         <DataDisplay data={this.state.iss.velocity} name=\"Velocity\" />\r\n                         <DataDisplay data={this.state.iss.timestamp} name=\"Date & Time\" />\r\n                     </div>;\r\n\r\n      const map = <BingMap \r\n                      lat={this.lat} \r\n                      long={this.lon} \r\n                      bingkey={this.state.key} \r\n                      /> ;\r\n\r\n      const imag =  <div className=\"imag\">\r\n                    <canvas \r\n                        ref=\"canvas\"\r\n                        width={720} \r\n                        height={360} \r\n                    >\r\n                    <canvas ref=\"canvas_def\"  width={720} height={360} className=\"hidden\" />\r\n                    </canvas>\r\n                    </div>\r\n    \r\n      return (\r\n      <div className=\"app\" >\r\n          <div className=\"header\">Where is ISS?</div>\r\n            {labels}\r\n            {imag}\r\n            <div style={{clear:'both', height: '40vh', width: '950px', marginLeft: '1%', float: 'left', left: '30px',  border: 'double white 3px' }}>{map}</div>\r\n      </div>);\r\n    }\r\n\r\n    componentDidMount(){\r\n      setInterval(this.timerDownload, 1000);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n// keu kdZJmZ4vgujbABzslMTx~LJdezJEfoUd_AGfouXIjRg~AgDg1zk0AZwHJIi709KW2T97_JL8p5AJS8szvnwdLyFQRNMyc0bfsVGJUBnxIve9","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}